name: Upload Python Package
on:
  release:
    types: [published]

jobs:
  build_wheels:
    name: Build wheels on ${{matrix.arch}} for ${{matrix.os}}
    runs-on: ${{matrix.os}}
    env:
      CIBW_SKIP: "pp27-* pp3* cp27-* cp34-* cp35-* cp36-* *_i686"
      CIBW_TEST_SKIP: "*-win_arm64"
      CIBW_BEFORE_BUILD: "pip install Cython>=3.0.10"
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [auto]
        # include:
        # - os: ubuntu-latest
        #   arch: aarch64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        if: ${{matrix.arch == 'aarch64'}}
      - name: Install Build Tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install Cython>=3.0.10
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20.0
        env:
          # CIBW_ARCHS_WINDOWS: AMD64 ARM64
          CIBW_ARCHS_MACOS: x86_64 arm64 universal2
          CIBW_ARCHS_LINUX: ${{matrix.arch}}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{matrix.os}}-${{matrix.arch}}-${{strategy.job-index}}
          path: wheelhouse/*.whl
          retention-days: 1

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Build Tools
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install build Cython>=3.0.10
      - name: Build 'sdist'
        run: |
          python -m build --sdist --outdir dist
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
          retention-days: 1

  upload:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{secrets.TEST_PYPI_API_TOKEN}}
          repository-url: https://test.pypi.org/legacy/
      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{secrets.PYPI_API_TOKEN}}
